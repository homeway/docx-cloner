#language: zh-CN

功能: 替换Docx内标签
  将docx文档中的标签替换为指定的内容。
  替换的情形有很多，大致包括：
    1、单个标签替换，如"{name}"替换为"周大福"
    2、多个标签同时替换
    3、列表标签替换，如表格中包含一行定义，每行包括"{价格}"和"{数量}"，而要替换的数据是不确定的，如有5行，也可能是50行
       但所替换的数据都使用标签所在的行样式
    4、表格中可能包含一些复杂的情况，例如行样式包括按奇数行、偶数行的不同样式
    5、docx文件也可能对List列表作为整行的样式复制
    6、更复杂的情况是图表、图片等情况
    7、还有页眉、页脚中的内容替换

  背景: 被替换的源文件
    假如"docx-examples"示例文件夹中存在一个"source.docx"的文件
    而且"docx-examples/dest.docx"这个目标文件已经被清除

  场景大纲: 1、简单地读取词语替换标签
    这是最简单的情形，例如将标签{name}，替换为真正的姓名。

    假如程序将目标文件中的"<tagname>"替换为"<value>"
    那么应该生成目标文件
    而且被目标文件中应该包含"<value>"这个标签词

    例子: 替换单个标签的几种情况

      | tagname | value |
      | {name}  | 周大福 |
      | {Name}  | 周大福 |
      | {NAME}  | 周大福 |
      | {{名字}} | 周大福 |
      | $名字$   | 周大福 |

  场景: 2、设置多个标签的情形
    如果同时替换5个标签的，也要能正确运行

    假如有这样一组数据：
      | {name}  | 周大福 |
      | {Name}  | 周二福 |
      | {NAME}  | 周三福 |
      | {{名字}} | 周四福 |
      | $名字$   | 周五福 |

    当程序将源文件的第1列中标签替换为第2列数据
    那么应该生成目标文件
    而且被目标文件中应该包含被替换的第2列数据

  场景: 3、替换表格行数据
    按行数据替换表格内容是常见的应用

    假如有这样一组数据：
      | {名称1} | {00.01}   |
      | 自行车  | 256.00    |
      | 小汽车  | 125600    |
      | 大卡车  | 256000.00 |
      | 电视机  | 6999.00   |
      | 洗衣机  | 3488.00   |

    当程序将表中第1行作为标签名，第2行以后作为行数据替换
    那么应该生成目标文件
    而且被目标文件中应该包含被替换的第2行以后的数据

